"use strict";(self.webpackChunksnowflake_promise_website=self.webpackChunksnowflake_promise_website||[]).push([[1695],{432:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"comparisons/comparison-1-connecting-to-snowflake","title":"Connecting to Snowflake","description":"This comparison shows the difference between callback-based and Promise-based connection handling.","source":"@site/docs/comparisons/comparison-1.mdx","sourceDirName":"comparisons","slug":"/comparisons/comparison-1-connecting-to-snowflake","permalink":"/snowflake-promise/docs/comparisons/comparison-1-connecting-to-snowflake","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"comparison-1-connecting-to-snowflake","title":"Connecting to Snowflake"},"sidebar":"tutorialSidebar","previous":{"title":"Comparisons","permalink":"/snowflake-promise/docs/comparisons/"},"next":{"title":"Executing a Statement","permalink":"/snowflake-promise/docs/comparisons/comparison-2-executing-a-statement"}}');var r=t(4848),a=t(8453),s=t(5537),i=t(9329);const c={id:"comparison-1-connecting-to-snowflake",title:"Connecting to Snowflake"},l=void 0,u={},d=[{value:"Examples",id:"examples",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"This comparison shows the difference between callback-based and Promise-based connection handling."}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/docs/authentication-and-mfa",children:"Authentication and MFA"})," for information about upcoming changes to username/password authentication."]})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Without"})," this library: Use callbacks to handle connection results, with additional complexity to check if the connection is ready."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"With"})," this library: Simply await the connection - clean and straightforward."]}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Click \u201cWITHOUT Helper Library\u201d to see the original code"}),"\n",(0,r.jsx)(n.li,{children:"Click \u201cWITH Helper Library\u201d to see the improved code using this library"}),"\n"]})}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsxs)(i.A,{value:"example-without",label:"WITHOUT Helper Library",children:[(0,r.jsxs)(n.p,{children:["Based on an example from ",(0,r.jsx)(n.a,{href:"https://docs.snowflake.com/en/developer-guide/node-js/nodejs-driver-connect#creating-a-single-connection",children:"Snowflake SDK documentation"}),"."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Not using the Promise Helper Library\n\nconst connection = snowflake.createConnection({\n  account: "your-account",\n  username: "your-username",\n  password: "your-password",\n});\n\n// Callback-based connection - harder to coordinate with other async code\nconnection.connect(function (err, conn) {\n  if (err) {\n    console.error("Unable to connect: " + err.message);\n    return;\n  }\n  console.log("Successfully connected to Snowflake");\n\n  // Connection logic must be inside callback or you need additional coordination\n  // Optional: store the connection ID\n  const connectionId = conn.getId();\n});\n\n// Outside the callback, you need to check if connection is ready\nconst isConnectionValid = await connection.isValidAsync();\nif (isConnectionValid) {\n  // Now you can use the connection...\n}\n'})})]}),(0,r.jsx)(i.A,{value:"example-with",label:"WITH Helper Library",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Using the Promise Helper Library\n\nconst connection = promisifyConnection(\n  snowflake.createConnection({\n    account: "your-account",\n    username: "your-username",\n    password: "your-password",\n  })\n);\n\n// Clean, Promise-based connection\ntry {\n  await connection.connect();\n  console.log("Successfully connected to Snowflake");\n\n  // Optional: store the connection ID\n  const connectionId = connection.getId();\n\n  // Connection is ready - execute queries immediately\n  // const { resultsPromise } = connection.execute({ sqlText: "SELECT 1" });\n\n} catch (error) {\n  console.error("Unable to connect:", error);\n  return;\n}\n'})})})]})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},5537:(e,n,t)=>{t.d(n,{A:()=>k});var o=t(6540),r=t(4164),a=t(5627),s=t(6347),i=t(372),c=t(604),l=t(1861),u=t(8749);function d(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:o,default:r}}=e;return{value:n,label:t,attributes:o,default:r}}))}(t);return function(e){const n=(0,l.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const r=(0,s.W6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c.aZ)(a),(0,o.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(r.location.search);n.set(a,e),r.replace({...r.location,search:n.toString()})}),[a,r])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,a=p(e),[s,c]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const o=t.find((e=>e.default))??t[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:a}))),[l,d]=h({queryString:t,groupId:r}),[f,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,a]=(0,u.Dv)(t);return[r,(0,o.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:r}),g=(()=>{const e=l??f;return m({value:e,tabValues:a})?e:null})();(0,i.A)((()=>{g&&c(g)}),[g]);return{selectedValue:s,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);c(e),d(e),b(e)}),[d,b,a]),tabValues:a}}var b=t(9136);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var w=t(4848);function y(e){let{className:n,block:t,selectedValue:o,selectValue:s,tabValues:i}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,a.a_)(),u=e=>{const n=e.currentTarget,t=c.indexOf(n),r=i[t].value;r!==o&&(l(n),s(r))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,w.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:a}=e;return(0,w.jsx)("li",{role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,ref:e=>{c.push(e)},onKeyDown:d,onClick:u,...a,className:(0,r.A)("tabs__item",g.tabItem,a?.className,{"tabs__item--active":o===n}),children:t??n},n)}))})}function x(e){let{lazy:n,children:t,selectedValue:a}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,w.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function v(e){const n=f(e);return(0,w.jsxs)("div",{className:(0,r.A)("tabs-container",g.tabList),children:[(0,w.jsx)(y,{...n,...e}),(0,w.jsx)(x,{...n,...e})]})}function k(e){const n=(0,b.A)();return(0,w.jsx)(v,{...e,children:d(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var o=t(6540);const r={},a=o.createContext(r);function s(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(a.Provider,{value:n},e.children)}},9329:(e,n,t)=>{t.d(n,{A:()=>s});t(6540);var o=t(4164);const r={tabItem:"tabItem_Ymn6"};var a=t(4848);function s(e){let{children:n,hidden:t,className:s}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,o.A)(r.tabItem,s),hidden:t,children:n})}}}]);