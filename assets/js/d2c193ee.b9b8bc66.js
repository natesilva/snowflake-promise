"use strict";(self.webpackChunksnowflake_promise_website=self.webpackChunksnowflake_promise_website||[]).push([[4219],{6029:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"examples/connecting/example-2-connecting-to-snowflake","title":"Key Pair Authentication","description":"Key pair authentication is one of Snowflake\'s recommended authentication methods. It eliminates passwords entirely and provides better security.","source":"@site/docs/examples/connecting/connecting-example-2.mdx","sourceDirName":"examples/connecting","slug":"/examples/connecting/example-2-connecting-to-snowflake","permalink":"/snowflake-promise/docs/examples/connecting/example-2-connecting-to-snowflake","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"example-2-connecting-to-snowflake","title":"Key Pair Authentication"},"sidebar":"tutorialSidebar","previous":{"title":"Username and Password Authentication","permalink":"/snowflake-promise/docs/examples/connecting/example-1-connecting-to-snowflake"},"next":{"title":"Executing Queries","permalink":"/snowflake-promise/docs/examples/executing-queries/"}}');var i=t(4848),s=t(8453);const r={id:"example-2-connecting-to-snowflake",title:"Key Pair Authentication"},a=void 0,c={},l=[{value:"Documentation",id:"documentation",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Steps",id:"steps",level:2},{value:"Example",id:"example",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Key pair authentication is one of Snowflake's recommended authentication methods. It eliminates passwords entirely and provides better security."}),"\n",(0,i.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.snowflake.com/en/user-guide/key-pair-auth",children:"Key-pair authentication and key-pair rotation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.snowflake.com/en/developer-guide/node-js/nodejs-driver-authenticate#use-key-pair-authentication-and-key-pair-rotation",children:"Snowflake SDK documentation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://community.snowflake.com/s/article/Key-Based-Authentication-Failed-with-JWT-token-is-invalid-Error",children:"Troubleshooting guide"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A Snowflake user configured with key pair authentication"}),"\n",(0,i.jsx)(n.li,{children:"Access to the private key file (store securely using AWS Secrets Manager, Azure Key Vault, etc.)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"steps",children:"Steps"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Load your private key file securely"}),"\n",(0,i.jsxs)(n.li,{children:["Create a connection with ",(0,i.jsx)(n.code,{children:'authenticator: "SNOWFLAKE_JWT"'})]}),"\n",(0,i.jsxs)(n.li,{children:["Pass the connection to ",(0,i.jsx)(n.code,{children:"promisifyConnection"})]}),"\n",(0,i.jsxs)(n.li,{children:["Call ",(0,i.jsx)(n.code,{children:"connect()"})," to establish the connection"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import * as crypto from "node:crypto";\nimport * as fs from "node:fs/promises";\nimport { promisifyConnection } from "snowflake-promise";\nimport snowflake from "snowflake-sdk";\n\n// Get the PEM-formatted private key string from secure storage\n// (AWS Secrets Manager, Azure Key Vault, etc.)\nconst privateKey = await getFromSecureStorage("snowflake-private-key");\n\n// Alternative: Read from filesystem (for development/testing only)\n// const privateKeyFile = await fs.readFile("/path/to/your/rsa_key.p8");\n// const privateKeyObject = crypto.createPrivateKey({\n//   key: privateKeyFile,\n//   format: "pem"\n// });\n// const privateKey = privateKeyObject.export({\n//   format: "pem",\n//   type: "pkcs8"\n// });\n\nconst connection = promisifyConnection(\n  snowflake.createConnection({\n    account: "your-account",\n    username: "your-username",\n    authenticator: "SNOWFLAKE_JWT",\n    privateKey: privateKey,\n    // Optional: specify database, schema, warehouse\n  })\n);\n\ntry {\n  await connection.connect();\n  console.log("Successfully connected to Snowflake");\n} catch (error) {\n  console.error("Connection failed:", error);\n  return;\n}\n\n// Now you can execute queries\n// const { resultsPromise } = connection.execute({ sqlText: "SELECT 1" });\n'})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(6540);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);