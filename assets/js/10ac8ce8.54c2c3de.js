"use strict";(self.webpackChunksnowflake_promise_website=self.webpackChunksnowflake_promise_website||[]).push([[2104],{2653:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"migration-guide","title":"Legacy Migration Guide","description":"This guide explains how to migrate from the legacy API (using Snowflake and Statement classes) to the current promisifyConnection API.","source":"@site/docs/migration-guide.mdx","sourceDirName":".","slug":"/migration-guide","permalink":"/snowflake-promise/docs/migration-guide","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8,"title":"Legacy Migration Guide"},"sidebar":"tutorialSidebar","previous":{"title":"Implementation Details","permalink":"/snowflake-promise/docs/implementation-details"}}');var i=s(4848),t=s(8453);const r={sidebar_position:8,title:"Legacy Migration Guide"},c=void 0,a={},l=[{value:"Why Migrate?",id:"why-migrate",level:2},{value:"Migration Steps",id:"migration-steps",level:2},{value:"1. Import Changes",id:"1-import-changes",level:3},{value:"2. Connection Creation",id:"2-connection-creation",level:3},{value:"3. Executing Queries",id:"3-executing-queries",level:3},{value:"4. Using Statements",id:"4-using-statements",level:3},{value:"5. Configuration and Logging",id:"5-configuration-and-logging",level:3},{value:"Complete Example",id:"complete-example",level:2},{value:"Key Differences Summary",id:"key-differences-summary",level:2}];function d(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["This guide explains how to migrate from the legacy API (using ",(0,i.jsx)(n.code,{children:"Snowflake"})," and ",(0,i.jsx)(n.code,{children:"Statement"})," classes) to the current ",(0,i.jsx)(n.code,{children:"promisifyConnection"})," API."]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["The legacy API remains functional for backward compatibility, but we recommend migrating to ",(0,i.jsx)(n.code,{children:"promisifyConnection"})," for new development and better future compatibility."]})}),"\n",(0,i.jsx)(n.h2,{id:"why-migrate",children:"Why Migrate?"}),"\n",(0,i.jsxs)(n.p,{children:["The original library provided ",(0,i.jsx)(n.code,{children:"Snowflake"})," and ",(0,i.jsx)(n.code,{children:"Statement"})," wrapper classes around the Snowflake SDK. The current approach uses ",(0,i.jsx)(n.code,{children:"promisifyConnection"})," to enhance the standard SDK directly."]}),"\n",(0,i.jsx)(n.p,{children:"Benefits of the new approach:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Better SDK alignment"}),": Works directly with the official Snowflake SDK"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Improved compatibility"}),": Stays current with SDK updates automatically"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Less overhead"}),": Minimal wrapper code for better performance"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Future-proof"}),": Less likely to break with SDK changes"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"migration-steps",children:"Migration Steps"}),"\n",(0,i.jsx)(n.h3,{id:"1-import-changes",children:"1. Import Changes"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Legacy API:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { Snowflake } from "snowflake-promise";\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"New API:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import snowflakeSdk from "snowflake-sdk";\nimport { promisifyConnection } from "snowflake-promise";\n'})}),"\n",(0,i.jsx)(n.h3,{id:"2-connection-creation",children:"2. Connection Creation"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Legacy API:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const snowflake = new Snowflake({\n  account: "<account name>",\n  username: "<username>",\n  password: "<password>",\n  database: "SNOWFLAKE_SAMPLE_DATA",\n  schema: "TPCH_SF1",\n  warehouse: "DEMO_WH",\n});\n\nawait snowflake.connect();\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"New API:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const connection = promisifyConnection(\n  snowflakeSdk.createConnection({\n    account: "<account name>",\n    username: "<username>",\n    password: "<password>",\n    database: "SNOWFLAKE_SAMPLE_DATA",\n    schema: "TPCH_SF1",\n    warehouse: "DEMO_WH",\n  })\n);\n\nawait connection.connect();\n'})}),"\n",(0,i.jsx)(n.h3,{id:"3-executing-queries",children:"3. Executing Queries"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Legacy API:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const rows = await snowflake.execute(\n  "SELECT COUNT(*) FROM CUSTOMER WHERE C_MKTSEGMENT=?",\n  ["AUTOMOBILE"]\n);\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"New API:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const { resultsPromise } = connection.execute({\n  sqlText: "SELECT COUNT(*) FROM CUSTOMER WHERE C_MKTSEGMENT=?",\n  binds: ["AUTOMOBILE"],\n});\nconst rows = await resultsPromise;\n'})}),"\n",(0,i.jsx)(n.h3,{id:"4-using-statements",children:"4. Using Statements"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Legacy API:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const statement = snowflake.createStatement({\n  sqlText: "SELECT * FROM CUSTOMER WHERE C_MKTSEGMENT=:1",\n  binds: ["AUTOMOBILE"],\n  streamResult: true,\n});\n\n// Stream rows\nstatement\n  .streamRows({ start: 250, end: 275 })\n  .on("error", console.error)\n  .on("data", (row) => console.log(`customer name is: ${row["C_NAME"]}`))\n  .on("end", () => console.log("done processing"));\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"New API:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const { statement } = connection.execute({\n  sqlText: "SELECT * FROM CUSTOMER WHERE C_MKTSEGMENT=?",\n  binds: ["AUTOMOBILE"],\n  streamResult: true,\n});\n\n// Stream rows (same as legacy)\nstatement\n  .streamRows({ start: 250, end: 275 })\n  .on("error", console.error)\n  .on("data", (row) => console.log(`customer name is: ${row["C_NAME"]}`))\n  .on("end", () => console.log("done processing"));\n'})}),"\n",(0,i.jsx)(n.h3,{id:"5-configuration-and-logging",children:"5. Configuration and Logging"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Legacy API:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const snowflake = new Snowflake(\n  { /* connection options */ },\n  { logSql: console.log },\n  { ocspFailOpen: true }\n);\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"New API:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// Configure SDK options before creating connection\nsnowflakeSdk.configure({\n  logLevel: "INFO",\n  // Note: ocspFailOpen now defaults to true, so no need to set it explicitly\n});\n'})}),"\n",(0,i.jsx)(n.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Legacy API:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { Snowflake } from "snowflake-promise";\n\nconst snowflake = new Snowflake({\n  account: "<account>",\n  username: "<username>",\n  password: "<password>",\n  database: "SNOWFLAKE_SAMPLE_DATA",\n});\n\nawait snowflake.connect();\nconst rows = await snowflake.execute("SELECT COUNT(*) FROM CUSTOMER", []);\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"New API:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import snowflakeSdk from "snowflake-sdk";\nimport { promisifyConnection } from "snowflake-promise";\n\nconst connection = promisifyConnection(\n  snowflakeSdk.createConnection({\n    account: "<account>",\n    username: "<username>",\n    password: "<password>",\n    database: "SNOWFLAKE_SAMPLE_DATA",\n  })\n);\n\nawait connection.connect();\nconst { resultsPromise } = connection.execute({\n  sqlText: "SELECT COUNT(*) FROM CUSTOMER"\n});\nconst rows = await resultsPromise;\n'})}),"\n",(0,i.jsx)(n.h2,{id:"key-differences-summary",children:"Key Differences Summary"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Imports"}),": Use the official SDK directly instead of wrapper classes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Connection"}),": Use ",(0,i.jsx)(n.code,{children:"promisifyConnection()"})," to wrap SDK connections"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Queries"}),": Use ",(0,i.jsx)(n.code,{children:"execute()"})," with options object instead of positional parameters"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Results"}),": Await ",(0,i.jsx)(n.code,{children:"resultsPromise"})," instead of direct return values"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Configuration"}),": Use ",(0,i.jsx)(n.code,{children:"snowflakeSdk.configure()"})," instead of constructor parameters"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The migration is straightforward - most of your existing Promise-based code will work with minimal changes once you update the setup and query patterns."})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var o=s(6540);const i={},t=o.createContext(i);function r(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);