"use strict";(self.webpackChunksnowflake_promise_website=self.webpackChunksnowflake_promise_website||[]).push([[4219],{6029:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"examples/connecting/example-2-connecting-to-snowflake","title":"Example: Key Pair Authentication","description":"Documentation","source":"@site/docs/examples/connecting/connecting-example-2.mdx","sourceDirName":"examples/connecting","slug":"/examples/connecting/example-2-connecting-to-snowflake","permalink":"/snowflake-promise/docs/examples/connecting/example-2-connecting-to-snowflake","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"example-2-connecting-to-snowflake","title":"Example: Key Pair Authentication"},"sidebar":"tutorialSidebar","previous":{"title":"Example: Username and Password","permalink":"/snowflake-promise/docs/examples/connecting/example-1-connecting-to-snowflake"},"next":{"title":"Executing Queries","permalink":"/snowflake-promise/docs/examples/executing-queries/"}}');var i=t(4848),a=t(8453);const s={id:"example-2-connecting-to-snowflake",title:"Example: Key Pair Authentication"},r=void 0,c={},l=[{value:"Documentation",id:"documentation",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Steps",id:"steps",level:2},{value:"Example Code: Key-Pair Authentication",id:"example-code-key-pair-authentication",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Main documentation: ",(0,i.jsx)(n.a,{href:"https://docs.snowflake.com/en/user-guide/key-pair-auth",children:"Key-pair authentication and key-pair rotation"})]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.snowflake.com/en/developer-guide/node-js/nodejs-driver-authenticate#use-key-pair-authentication-and-key-pair-rotation",children:"Snowflake SDK documentation"})}),"\n",(0,i.jsxs)(n.li,{children:["\ud83d\udd27 ",(0,i.jsx)(n.a,{href:"https://community.snowflake.com/s/article/Key-Based-Authentication-Failed-with-JWT-token-is-invalid-Error",children:"Troubleshooting information from Snowflake"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"You must have a user configured with key pair authentication, as described in the Snowflake documentation."}),"\n",(0,i.jsx)(n.li,{children:"You must have access to the private key file for the user."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"steps",children:"Steps"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Load the private key file."}),"\n",(0,i.jsxs)(n.li,{children:["Create a connection using the Snowflake SDK ",(0,i.jsx)(n.code,{children:"createConnection"})," method.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Set the ",(0,i.jsx)(n.code,{children:"authenticator"})," property to ",(0,i.jsx)(n.code,{children:"SNOWFLAKE_JWT"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Don\u2019t call ",(0,i.jsx)(n.code,{children:"connect"})," yet."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["After creating the connection, pass it to the Promise Helper library\u2019s ",(0,i.jsx)(n.code,{children:"promisifyConnection"})," function."]}),"\n",(0,i.jsxs)(n.li,{children:["On the promisified connection object, await the ",(0,i.jsx)(n.code,{children:"connect"})," method to establish a connection to Snowflake."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"example-code-key-pair-authentication",children:"Example Code: Key-Pair Authentication"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { strict as assert } from "node:assert";\nimport * as crypto from "node:crypto";\nimport * as fs from "node:fs/promises";\nimport { promisifyConnection } from "snowflake-promise";\nimport snowflake from "snowflake-sdk";\n\n\n// Read the private key file and extract it as a PEM-encoded string.\n// For this example, we\u2019ll use a file path to the private key file.\n// In production, use a secure storage service such as AWS Secrets\n// Manager or Azure Key Vault.\nconst privateKeyFile = await fs.readFile("/path/to/the/file/rsa_key.p8");\nconst privateKeyObject = crypto.createPrivateKey({ key: privateKeyFile, format: "pem" });\nconst privateKey = privateKeyObject.export({ format: "pem", type: "pkcs8" });\n\n// Create a Connection using the SDK\u2019s `createConnection` and promisify it\nconst connection = promisifyConnection(\n  snowflake.createConnection({\n    account: account,\n    username: username,\n    authenticator: "SNOWFLAKE_JWT",\n    privateKey: privateKey.toString(),\n  }),\n);\n\n// Connect to Snowflake\ntry {\n  await connection.connect();\n  console.log("Successfully connected to Snowflake.");\n} catch (err) {\n  assert(err instanceof Error);\n  console.error("Unable to connect: " + err.message);\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var o=t(6540);const i={},a=o.createContext(i);function s(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);